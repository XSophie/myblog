<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sophie&#39;s Cabin</title>
    <link>/post/</link>
    <description>Recent content in Posts on Sophie&#39;s Cabin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从R中调用Python</title>
      <link>/2020/09/21/rpython/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/21/rpython/</guid>
      <description>最近开始遥感数据分析的项目，了解到从R中调用Python的一个包，叫reticulate包，在R和Rmarkdown中都能使用，实现了R和Python对象之间的转换。想到我之前的工作，空间数据用python实现，其他数据分析则通过R代码实现，导致工作不连贯，两个程序来回换，代码的整理也比较乱。看到reticulate，瞬间有一种相见恨晚的感觉。
本文主要是参考sunshine_xxp的博客：https://blog.csdn.net/qq_31342997/article/details/89433255
为了便于自己之后的学习和review，我把一些内容整理到这里。
首先我现在用的Python是anaconda3环境下的Python。使用R调用python的时候，需要先再R中设定Python的运行环境。
在R中调用Python程序 install.package(&amp;quot;reticulate&amp;quot;)library(retuculate)py_available() #检查系统是否安装过Python##根据所安装的Python环境，选择使用use_condaenv or use_pythonuse_condaenv(&amp;quot;D:/Program Files (X86)/Anaconda3&amp;quot;)use_python(&amp;quot;D:/Program Files (X86)/Anaconda3/python.exe&amp;quot;)py_config() #查看python版本环境和anaconda以及numpy的信息在R中导入python模块 在R下面可以通过import()导入Python模块，这个有区别于Python的import方式。同时访问具体模块下面的函数，需要用$符号，也是R下面的符号，这个和python也有区别。比如：
import(numpy)numpy$transpose(x)R与Python交互使用 使用repl_python()函数，就可以在R中进入Python的运行环境。使用exit退出python,回到R。其中在python环境下创建的对象，就存储到了py这个变量下面了。回到R环境后，通过查看和处理py，可以继续对数据进行分析。
同样，在python环境下也可以处理从R中获取的数据。比如说rdata数据集：
repl_python()import pandas as pdpd.rdata.describe()pd.isnull(r.rdata.time)exit在R中载入python代码 如果你有一段写好的python代码，也可以直接通过R调用代码函数或者变量。
调用python函数.调用之后，可以直接在R环境下使用python代码里定义的函数，在R里完成计算。
source_python()直接获取python代码里的变量。
py_run_file(”python代码路径“)py_run_string()R与python的数据类型转换 Again，查看博客 https://blog.csdn.net/qq_31342997/article/details/89433255 里面有一些操作的例子，讲解很清晰。 rmarkdown里调用python 从rmarkdown里调用python就方便很多了，可以通过我们前面的方法实现。比如：
```{r setup, include=FALSE}library(reticulate)use_python()也可以直接在markdown里面嵌入python chunk，chunk里面的python code就按照python的语法来写。
```[python]import pandasflight = pandas.read_csv()print(flight)import matplotlib.pyplot as pltimport numpy as np从python中调用R 另外，我还看到可以从python中调用R，实现R的数据集、函数和包在python环境下运行。我平时主要用R，对python使用不多，只有分析空间数据或遥感数据的时候，会多用python，所以主要是从R中调用python的结果，这块内容可参考的相关介绍同样来自sunshine_xxp（非常感谢！）：https://blog.</description>
    </item>
    
    <item>
      <title>关于r-blogdown</title>
      <link>/2020/09/20/r-blogdown/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/20/r-blogdown/</guid>
      <description>这是本博客的第一篇文章。
这个博客通过R下的blogdown包创建，也算是我在Rmarkdown应用下的一个探索和练习。所以第一篇文章也顺便把这两天的发现总结一下。
首先要说明的是，R markdown下面有很多有用的包，可以实现写作、编程、发表一体化。开发者是大神谢益辉，愿景就是使写作者集中在文字创作上，画图和排版等重复的工作可以通过代码助力完成。我这两天大概试了试，发现确实很好用。
这些包运行的平台是在rmarkdown下，所以需要基本的rmarkdown，knitr和tinytex.
在这里总结的包是以下三个：
 rticles  这个包里含有很多学术期刊的模板，可以直接加载模板在markdown里写文章。我最近正在用这个包，这样可以将自己的R代码插进文章里，这样修改代码生成新的图片后，就不需要输出再替换word里的图片，减少了很多繁琐的格式整理的工作。
相关的一些书籍和有用的网站：
github: https://github.com/rstudio/rticles
R Markdown Cook: https://bookdown.org/yihui/rmarkdown-cookbook/
rmarkdown: https://bookdown.org/yihui/rmarkdown/
https://vickysteeves.gitlab.io/repro-papers/r-markdown-in-reproducible-research.html
Bookdown  我也加载了bookdown，也就是说可以在R上整理书了。除了写作技术类书籍之外，我还看到了一些比较好的利用bookdown做技术类学习笔记的案例。所以自己之后的实践就是将数据类或者新技术类学习的内容，利用bookdown整理出来。
下面是一些有用的链接：
bookdown制作发布的案例： https://bookdown.org/
bookdown使用指南： https://bookdown.org/yihui/bookdown/
RPubs: https://rpubs.com/ (rmarkdown发布的一些文档)
https://blog.datascienceheroes.com/how-to-self-publish-a-book/
RStudio的Youtube Channel: https://www.youtube.com/channel/UC3xfbCMLCw1Hh4dWop3XtHg (这里有很多新的包的training和介绍，值得长期关注动态)
Blogdown  这个博客我就是用blogdown完成的。熟悉markdown的人用blogdown也会简单很多。操作和bookdown很类似，也是加载这个library后，建立一个新project,选择website Blog,就等于启动了blogdown.
以下也是相关的一些内容。
https://www.youtube.com/watch?v=CjTLN-FXiFA （这个视频有助于入门）
https://www.youtube.com/watch?v=-9uuyJzWzCI （了解如何通过Netlify发布blog网站）
https://bookdown.org/yihui/blogdown/ （关于blogdown的book）
现在我的了解就是掌握了这三个包，基本上可以在rmarkdown上面实现写文章、写书和写博客了。当然我还了解到也可以在R里面实现记者写报道的功能（尤其是涉及到数据的一些报道），我现在还没有探索这方面。
总之，Rmarkdown功能非常的强大，感觉有助于实现很好的知识管理和写作产出。
有一些可以参考的博客：
https://pzhao.org/zh/
https://yufree.cn/
https://yihui.org/</description>
    </item>
    
  </channel>
</rss>
